from future.moves import tkinter  # Імпорт Tkinter
import math  # Імпорт модуля математики

def click(val):  # Функція для обробки натискання кнопок
    e = entry.get()  # Отримання вмісту введення
    ans = " "  # Ініціалізація результату

    try:  # Обробка помилок
        if val == "C":  # Якщо натиснута кнопка "C" (видалення одного символу)
            e = e[0:len(e) - 1]  # Видаляємо останній символ
            entry.delete(0, "end")  # Видаляємо вміст введення
            entry.insert(0, e)  # Вставляємо відредагований вміст введення
            return  # Завершуємо функцію
        elif val == "CE":  # Якщо натиснута кнопка "CE" (видалення всього введення)
            entry.delete(0, "end")  # Видаляємо вміст введення
        elif val == "√":  # Якщо натиснута кнопка "√" (квадратний корінь)
            ans = math.sqrt(eval(e))  # Обчислюємо квадратний корінь
        elif val == "π":  # Якщо натиснута кнопка "π" (число пі)
            ans = math.pi  # Присвоюємо значення числа пі
        elif val == "cos0":  # Якщо натиснута кнопка "cos0" (косинус)
            ans == math.cos(math.radians(eval(e)))  # Обчислюємо косинус
        elif val == "sin0":  # Якщо натиснута кнопка "sin0" (синус)
            ans == math.sin(math.radians(eval(e)))  # Обчислюємо синус
        elif val == "tan0":  # Якщо натиснута кнопка "tan0" (тангенс)
            ans == math.tan(math.radians(eval(e)))  # Обчислюємо тангенс
        elif val == "2π":  # Якщо натиснута кнопка "2π" (два помножене на пі)
            ans = 2 * math.pi  # Присвоюємо значення два помноженого на пі
        elif val == "cosh":  # Якщо натиснута кнопка "cosh" (гіперболічний косинус)
            ans = math.cosh(eval(e))  # Обчислюємо гіперболічний косинус
        elif val == "sinh":  # Якщо натиснута кнопка "sinh" (гіперболічний синус)
            ans = math.sinh(eval(e))  # Обчислюємо гіперболічний синус
        elif val == "tanh":  # Якщо натиснута кнопка "tanh" (гіперболічний тангенс)
            ans = math.tanh(eval(e))  # Обчислюємо гіперболічний тангенс
        elif val == chr(8731):  # Якщо натиснута кнопка "∛" (кубічний корінь)
            ans = eval(e) ** (1 / 3)  # Обчислюємо кубічний корінь
        elif val == "x\u02b8":  # Якщо натиснута кнопка "x^y" (піднесення до степеня)
            entry.insert("end", "**")  # Додаємо оператор піднесення до степеня
            return  # Завершуємо функцію
        elif val == "x\u00B3":  # Якщо натиснута кнопка "x^3" (піднесення до куба)
            ans = eval(e) ** 3  # Підносимо до куба
        elif val == "x\u00B2":  # Якщо натиснута кнопка "x^2" (піднесення до квадрата)
            ans = eval(e) ** 2  # Підносимо до квадрата
        elif val == "In":  # Якщо натиснута кнопка "In" (логарифм за основою 2)
            ans = math.log2(eval(e))  # Обчислюємо логарифм за основою 2
        elif val == "deg":  # Якщо натиснута кнопка "deg" (перетворення у градуси)
            ans = math.degrees(eval(e))  # Перетворюємо у градуси
        elif val == "rad":  # Якщо натиснута кнопка "rad" (перетворення у радіани)
            ans = math.radians(eval(e))  # Перетворюємо у радіани
        elif val == "e":  # Якщо натиснута кнопка "e" (число ейлера)
            ans = math.e  # Присвоюємо значення числа ейлера
        elif val == "log10":  # Якщо натиснута кнопка "log10" (десятковий логарифм)
            ans = math.log10(eval(e))  # Обчислюємо десятковий логарифм
        elif val == "x!":  # Якщо натиснута кнопка "x!" (факторіал)
            ans = math.factorial(eval(e))  # Обчислюємо факторіал
        elif val == chr(247):  # Якщо натиснута кнопка "÷" (ділення)
            entry.insert("end", "/")  # Додаємо оператор ділення
            return  # Завершуємо функцію
        elif val == "=":  # Якщо натиснута кнопка "=" (обчислення виразу)
            ans = eval(e)  # Обчислюємо вираз
        else:  # Якщо натиснута звичайна кнопка з цифрою або оператором
            entry.insert("end", val)  # Додаємо цифру або оператор
            return  # Завершуємо функцію
        entry.delete(0, "end")  # Видаляємо вміст введення
        entry.insert(0, ans)  # Вставляємо результат обчислення
    except SyntaxError:  # Обробка синтаксичних помилок
        pass  # Пропускаємо обробку помилок

root = tkinter.Tk()  # Створення головного вікна
root.title("Scientific Calculator")  # Встановлення заголовку
root.geometry("680x464+100+100")  # Встановлення розміру
root.config(bg="black")  # Встановлення фону

entry = tkinter.Entry(root, font=("arial", 20, "bold"), bg="black", fg="white", bd=10, width=30)  # Створення віджету введення
entry.grid(row=0, column=0, columnspan=8)  # Розміщення віджету

button_list = ["C", "CE", "√", "+", "π", "cos0", "tan0", "sin0",
               "1", "2", "3", "-", "2π", "cosh", "tanh", "sinh", "4", "5",
               "6", "*", chr(8731), "x\u02b8", "x\u00B3", "x\u0082", "7",
               "8", "9", chr(247), "In", "deg", "rad", "e", "0", ".", "%",
               "=", "log10", "(",")", "x!"]  # Список кнопок

r = 1  # Змінна для рядка
c = 0  # Змінна для стовпця

# Розміщення кнопок
for i in button_list:
    button = tkinter.Button(root, width=5, height=2, bd=2, text=i, bg="black", fg="white", font=("arial", 18, "bold"), command=lambda button=i: click(button))
    button.grid(row=r, column=c, pady=1)
    c += 1  # Інкрементуємо стовпець
    if c > 7:  # Якщо досягнуто кінця рядка
        r += 1  # Змінюємо рядок
        c = 0  # Скидаємо стовпець

root.mainloop()  # Запускаємо головний цикл програми